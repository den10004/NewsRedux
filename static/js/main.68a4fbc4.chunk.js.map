{"version":3,"sources":["redux/type.js","redux/actions.js","Likes.js","redux/SingleComment.js","redux/Comments.js","Title.js","Spin.js","App.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootRecucers.js","redux/middleware.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","loaderOff","type","errorOn","text","dispatch","setTimeout","connect","state","likes","likeReducer","onIncrementLikes","onDecrementLikes","props","className","onClick","SingleComment","data","useState","commentText","setCommentText","id","useDispatch","useEffect","onSubmit","e","preventDefault","commentUpdate","commentDelete","value","onChange","target","hidden","Comments","textComment","setTextComment","comments","useSelector","commentsReducer","a","fetch","response","json","jsonData","uniqid","commentCreate","length","map","res","Title","inputReducer","inputText","Spin","spinner","appReducer","loading","color","height","width","visible","App","error","src","alt","initialState","rootReducers","combineReducers","action","commentsNew","name","itemIndex","findIndex","nextComments","slice","badWords","store","createStore","compose","applyMiddleware","thunk","next","some","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68a4fbc4.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT'\r\nexport const DECREMENT = 'DECREMENT'\r\nexport const INPUT_TEXT = 'INPUT_TEXT'\r\nexport const COMMENT_CREATE = 'COMMENT_CREATE'\r\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE'\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE'\r\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD'\r\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON'\r\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF'\r\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON'\r\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF'\r\n\r\n","import {\r\n  INCREMENT,\r\n  DECREMENT,\r\n  INPUT_TEXT,\r\n  COMMENT_CREATE,\r\n  COMMENT_UPDATE,\r\n  COMMENT_DELETE,\r\n  LOADER_DISPLAY_ON,\r\n  LOADER_DISPLAY_OFF,\r\n  COMMENTS_LOAD,\r\n  ERROR_DISPLAY_ON,\r\n  ERROR_DISPLAY_OFF,\r\n} from \"./type\";\r\n\r\nexport function incrementLikes() {\r\n  return {\r\n    type: INCREMENT,\r\n  };\r\n}\r\n\r\nexport function decrementLikes() {\r\n  return {\r\n    type: DECREMENT,\r\n  };\r\n}\r\n\r\nexport function inputText(text) {\r\n  return {\r\n    type: INPUT_TEXT,\r\n    text,\r\n  };\r\n}\r\n\r\nexport function commentCreate(text, id) {\r\n  return {\r\n    type: COMMENT_CREATE,\r\n    data: { text, id },\r\n  };\r\n}\r\n\r\nexport function commentUpdate(text, id) {\r\n  return {\r\n    type: COMMENT_UPDATE,\r\n    data: { text, id },\r\n  };\r\n}\r\n\r\nexport function commentDelete(id) {\r\n  return {\r\n    type: COMMENT_DELETE,\r\n    id,\r\n  };\r\n}\r\n\r\nexport function loaderOn() {\r\n  return {\r\n    type: LOADER_DISPLAY_ON,\r\n  };\r\n}\r\n\r\nexport function loaderOff() {\r\n  return {\r\n    type: LOADER_DISPLAY_OFF,\r\n  };\r\n}\r\n\r\nexport function errorOn(text) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ERROR_DISPLAY_ON,\r\n      text,\r\n    });\r\n    setTimeout(() => {\r\n      dispatch(ErrorOff());\r\n    }, 2000);\r\n  };\r\n}\r\n\r\nexport function ErrorOff() {\r\n  return {\r\n    type: ERROR_DISPLAY_OFF,\r\n  };\r\n}\r\n\r\nexport function commentsLoad() {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(loaderOn());\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/comments?_limit=10\"\r\n      );\r\n      const jsonData = await response.json();\r\n      dispatch({\r\n        type: COMMENTS_LOAD,\r\n        data: jsonData,\r\n      });\r\n      dispatch(loaderOff());\r\n    } catch (err) {\r\n      dispatch(errorOn(\"ошибка API\"));\r\n      dispatch(loaderOff());\r\n    }\r\n  };\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { incrementLikes, decrementLikes } from './redux/actions';\r\n\r\nfunction Likes(props) {\r\n  return (\r\n    <div className='button-controls'>\r\n      <button onClick={props.onIncrementLikes}>❤ {props.likes}</button>\r\n      <button onClick={props.onDecrementLikes} >Dislike</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  const {likeReducer} = state\r\n  return {\r\n    likes: likeReducer.likes\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\r\n  return {\r\n    onIncrementLikes: () => {\r\n     return dispatch(incrementLikes())\r\n\r\n    },\r\n    onDecrementLikes: () => {\r\n      return dispatch(decrementLikes())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import { useState, useEffect } from \"react\";\r\nimport {commentUpdate, commentDelete} from './actions'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction SingleComment({ data }) {\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const { text, id } = data;\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      setCommentText(text);\r\n    }\r\n  }, [text]);\r\n\r\n  const handleInput = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    dispatch(commentUpdate(commentText, id))\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault()\r\n    dispatch(commentDelete(id))\r\n  }\r\n\r\n  return (\r\n    <form className=\"comments-item\" onSubmit={handleUpdate}>\r\n      <div onClick={handleDelete} className=\"comments-item-delete\">&times;</div>\r\n      <input type=\"text\" value={commentText} onChange={handleInput} />\r\n      <input type=\"submit\" hidden />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SingleComment;\r\n","import { useState, useEffect } from \"react\";\r\nimport uniqid from \"uniqid\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { commentCreate, commentsLoad } from \"./actions\";\r\n\r\nfunction Comments(props) {\r\n  const [textComment, setTextComment] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const comments = useSelector((state) => {\r\n    const { commentsReducer } = state;\r\n    return commentsReducer.comments;\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    setTextComment(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = uniqid();\r\n    dispatch(commentCreate(textComment, id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(commentsLoad())\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"card-comments\">\r\n      <form onSubmit={handleSubmit} className=\"comments-item-create\">\r\n        <input type=\"text\" value={textComment} onChange={handleInput} />\r\n        <input type=\"submit\" hidden />\r\n      </form>\r\n      {!!comments.length &&\r\n        comments.map((res) => {\r\n          return <SingleComment key={res.id} data={res} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import {useDispatch, useSelector} from 'react-redux'\r\nimport {inputText} from './redux/actions'\r\n\r\n\r\n\r\nfunction Title(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const text = useSelector(state => {\r\n        const {inputReducer} = state;\r\n        return inputReducer.text\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        dispatch(inputText(e.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card-title\">\r\n            <div className=\"card-title-top\">\r\n                <input type='text' onChange={handleChange} />\r\n            </div>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title","import Loader from \"react-loader-spinner\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Spin = (props) => {\r\n  const spinner = useSelector((state) => state.appReducer.loading);\r\n\r\n  return (\r\n    <div className=\"loader-styles\">\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        visible={spinner}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spin;\r\n","import \"./App.css\";\nimport Likes from \"./Likes\";\nimport Comments from \"./redux/Comments\";\nimport Title from \"./Title\";\nimport Spin from \"./Spin\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const error = useSelector((state) => state.appReducer.error);\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <Spin />\n        <div className=\"card\">\n          {error && <div className=\"error-message\">{error}</div>}\n\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\" />\n            <Title />\n            <Likes />\n          </div>\n          <Comments />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { INCREMENT, DECREMENT } from \"./type\"\r\n\r\nconst initialState = {\r\n    likes: 0\r\n}\r\n\r\nexport const likeReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INCREMENT: \r\n        return {\r\n            ...state,\r\n            likes: state.likes + 1\r\n        }\r\n        case DECREMENT: \r\n        return {\r\n            ...state,\r\n            likes: state.likes - 1\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { INPUT_TEXT } from \"./type\";\r\n\r\nconst initialState = {\r\n  text: '',\r\n};\r\n\r\n\r\nexport const inputReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n\r\n    case INPUT_TEXT:\r\n      return {\r\n        ...state,\r\n       text: action.text\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { COMMENT_CREATE, COMMENT_UPDATE, COMMENT_DELETE, COMMENTS_LOAD } from \"./type\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n};\r\n\r\nexport const commentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case COMMENT_CREATE:\r\n      return {\r\n        ...state,\r\n        comments: [...state.comments, action.data],\r\n      };\r\n\r\n      case COMMENTS_LOAD:\r\n        const commentsNew = action.data.map(res => {\r\n          return {\r\n            text: res.name,\r\n            id: res.id\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          comments: commentsNew,\r\n        };\r\n  \r\n\r\n\r\n    case COMMENT_UPDATE:\r\n      const { data } = action;\r\n      const { comments } = state;\r\n      const itemIndex = comments.findIndex((res) => res.id === data.id);\r\n\r\n      const nextComments = [\r\n        ...comments.slice(0, itemIndex),\r\n        data,\r\n        ...comments.slice(itemIndex + 1),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        comments: nextComments,\r\n      };\r\n\r\n    case COMMENT_DELETE:\r\n      return (() => {\r\n        const { id } = action;\r\n        const { comments } = state;\r\n        const itemIndex = comments.findIndex((res) => res.id === id);\r\n\r\n        const nextComments = [\r\n          ...comments.slice(0, itemIndex),\r\n          ...comments.slice(itemIndex + 1),\r\n        ];\r\n\r\n        return {\r\n          ...state,\r\n          comments: nextComments,\r\n        };\r\n      })();\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  LOADER_DISPLAY_ON,\r\n  LOADER_DISPLAY_OFF,\r\n  ERROR_DISPLAY_ON,\r\n  ERROR_DISPLAY_OFF,\r\n} from \"./type\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADER_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case LOADER_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n      case ERROR_DISPLAY_ON:\r\n      return {\r\n        ...state,\r\n        error: action.text,\r\n      };\r\n\r\n\r\n      case ERROR_DISPLAY_OFF:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { likeReducer } from \"./likesReducer\";\r\nimport { inputReducer } from \"./inputReducer\";\r\nimport { commentsReducer } from \"./commentsReducer\";\r\nimport { appReducer } from \"./appReducer\";\r\n\r\nexport const rootReducers = combineReducers({\r\n    likeReducer, inputReducer, commentsReducer, appReducer\r\n})","import { COMMENT_CREATE } from \"./type\";\r\nimport { errorOn } from \"./actions\";\r\n\r\nconst badWords = [\"козёл\", \"осёл\"];\r\n\r\nexport function spamFilter(store) {\r\n  return function (next) {\r\n    return function (action) {\r\n      if (action.type === COMMENT_CREATE) {\r\n        const hasbadWords = badWords.some((res) =>\r\n          action.data.text.includes(res)\r\n        );\r\n        if (hasbadWords) {\r\n          return store.dispatch(errorOn(\"плохое слово\"));\r\n        }\r\n      }\r\n      return next(action);\r\n    };\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducers } from \"./redux/rootRecucers\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { spamFilter } from \"./redux/middleware\";\n\nconst store = createStore(rootReducers, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  ),\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}